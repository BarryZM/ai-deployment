{"paragraphs":[{"text":"import org.pmml4s.model.Model\n\nval model = Model.fromFile(\"xgb-iris.pmml\")","user":"anonymous","dateUpdated":"2019-08-20T10:20:19+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566221651572_-304953091","id":"20190819-213411_1615930523","dateCreated":"2019-08-19T21:34:11+0800","dateStarted":"2019-08-20T10:19:57+0800","dateFinished":"2019-08-20T10:19:57+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1031"},{"text":"%md\n通过`model`对象，我们可以获取模型的任何信息，包括模型类型、输入字段、输出字段、目标字段等。\n通过输入字段名以及类型，我们可以从外部文件或者数据库中读取数据，选择模型需要的数据来进行预测。","user":"anonymous","dateUpdated":"2019-08-20T10:21:35+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>通过<code>model</code>对象，我们可以获取模型的任何信息，包括模型类型、输入字段、输出字段、目标字段等。<br/>通过输入字段名以及类型，我们可以从外部文件或者数据库中读取数据，选择模型需要的数据来进行预测。</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1566263566300_1996893289","id":"20190820-091246_385073676","dateCreated":"2019-08-20T09:12:46+0800","dateStarted":"2019-08-20T10:21:35+0800","dateFinished":"2019-08-20T10:21:35+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1032"},{"text":"val modelElement = model.modelElement\n\nval targetName = model.targetName\nval classes = model.classes\n\nval inputNames = model.inputNames\nval inputSchema = model.inputSchema\nval inputFields = model.inputFields\n\nval outputNames = model.outputNames\nval outputSchema = model.outputSchema\nval outputFields = model.outputFields","user":"anonymous","dateUpdated":"2019-08-20T10:19:57+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":228,"optionOpen":false}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566266039290_-1368508944","id":"20190820-095359_2055905385","dateCreated":"2019-08-20T09:53:59+0800","dateStarted":"2019-08-20T10:19:57+0800","dateFinished":"2019-08-20T10:19:57+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1033"},{"text":"%md\n调用`predict(values)`函数进行预测，有多个重载的方法可以使用，结果类型始终与输入值类型相同，以下我们演示不同的输入值类型。","user":"anonymous","dateUpdated":"2019-08-20T10:21:37+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>调用<code>predict(values)</code>函数进行预测，有多个重载的方法可以使用，结果类型始终与输入值类型相同，以下我们演示不同的输入值类型。</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1566266007067_-640501644","id":"20190820-095327_191191170","dateCreated":"2019-08-20T09:53:27+0800","dateStarted":"2019-08-20T10:21:37+0800","dateFinished":"2019-08-20T10:21:37+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1034"},{"text":"// values是个Map\nval result = model.predict(Map(\"sepal length (cm)\" -> 5.7, \"sepal width (cm)\" -> 4.4, \"petal length (cm)\" -> 1.5, \"petal width (cm)\" -> 0.4))","user":"anonymous","dateUpdated":"2019-08-20T10:19:57+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566263905977_-2118254147","id":"20190820-091825_1937929627","dateCreated":"2019-08-20T09:18:25+0800","dateStarted":"2019-08-20T10:19:57+0800","dateFinished":"2019-08-20T10:19:58+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1035"},{"text":"// values是一个键值对序列\nval result = model.predict(\"sepal length (cm)\" -> 5.7, \"sepal width (cm)\" -> 4.4, \"petal length (cm)\" -> 1.5, \"petal width (cm)\" -> 0.4)","user":"anonymous","dateUpdated":"2019-08-20T10:19:58+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566263980239_2007460376","id":"20190820-091940_1262895988","dateCreated":"2019-08-20T09:19:40+0800","dateStarted":"2019-08-20T10:19:58+0800","dateFinished":"2019-08-20T10:19:58+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1036"},{"text":"// values是一个数组，输入值的顺序必须和模型`inputNames`函数返回的输入字段顺序一直，它们是一一对应的。结果也是一个数组，它的值和模型`outputNames`返回的值是对应的。\nval inputNames = model.inputNames\nval outputNames = model.outputNames\n\nval result = model.predict(Array(5.7, 4.4, 1.5, 0.4))","user":"anonymous","dateUpdated":"2019-08-20T10:19:58+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566264057602_-979468237","id":"20190820-092057_952716728","dateCreated":"2019-08-20T09:20:57+0800","dateStarted":"2019-08-20T10:19:58+0800","dateFinished":"2019-08-20T10:19:58+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1037"},{"text":"// values是一个JSON字符串，支持两种JSON格式，都可以支持多条数据的预测。如果是多条，建议使用字典格式，字符串长度更小。\n\n// records : 列表格式 [{column -> value}, … , {column -> value}]\nval result = model.predict(\"\"\"[{\"sepal length (cm)\": 5.7, \"sepal width (cm)\": 4.4, \"petal length (cm)\": 1.5, \"petal width (cm)\": 0.4}, {\"sepal length (cm)\": 6.4, \"sepal width (cm)\": 2.8, \"petal length (cm)\": 5.6, \"petal width (cm)\": 2.1}]\"\"\")\n\n// split : 字典格式 {‘columns’ -> [columns], ‘data’ -> [values]}\nval result2 = model.predict(\"\"\"{\"columns\": [\"sepal length (cm)\", \"sepal width (cm)\", \"petal length (cm)\", \"petal width (cm)\"], \"data\":[[5.7, 4.4, 1.5, 0.4], [6.4, 2.8, 5.6, 2.1]]}\"\"\")","user":"anonymous","dateUpdated":"2019-08-20T10:19:58+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566264315680_-611531008","id":"20190820-092515_812085280","dateCreated":"2019-08-20T09:25:15+0800","dateStarted":"2019-08-20T10:19:58+0800","dateFinished":"2019-08-20T10:19:58+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1038"},{"text":"// values是PMML4S内部的Series对象，使用这种方式，我们必须根据输入字段的类型转换数据，比如当前模型输入字段要求都是浮点类型，如果输入的值是字符类型，我们要进行类型转换。\n// 可以使用Field对象中的`toVal`函数，它会把任意输入的值转化为它本身需要的数据类型。\nimport org.pmml4s.data.Series\n\nval row = Map(\"sepal length (cm)\" -> \"5.7\", \"sepal width (cm)\" -> \"4.4\", \"petal length (cm)\" -> \"1.5\", \"petal width (cm)\" -> \"0.4\")\nval inputFields = model.inputFields\nval result = model.predict(Series.fromSeq(inputFields.map(x => x.toVal(row(x.name)))))","user":"anonymous","dateUpdated":"2019-08-20T10:19:58+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566262583330_1545279416","id":"20190820-085623_530061729","dateCreated":"2019-08-20T08:56:23+0800","dateStarted":"2019-08-20T10:19:58+0800","dateFinished":"2019-08-20T10:19:59+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1039"},{"text":"%md\n关于PMML4S的更多详情，可以访问它的Github主页：[https://github.com/autodeployai/pmml4s](https://github.com/autodeployai/pmml4s)","user":"anonymous","dateUpdated":"2019-08-20T10:21:40+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>关于PMML4S的更多详情，可以访问它的Github主页：<a href=\"https://github.com/autodeployai/pmml4s\">https://github.com/autodeployai/pmml4s</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1566222997959_-788449935","id":"20190819-215637_1383812617","dateCreated":"2019-08-19T21:56:37+0800","dateStarted":"2019-08-20T10:21:40+0800","dateFinished":"2019-08-20T10:21:40+0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1040"},{"text":"","user":"anonymous","dateUpdated":"2019-08-20T10:19:59+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1566267554816_-1183526082","id":"20190820-101914_917914372","dateCreated":"2019-08-20T10:19:14+0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1041"}],"name":"pmml4s-demo","id":"2EMCMJEWC","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}